{
  "compiler": {
    "version": "0.8.6+commit.11564f7e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [
          {
            "internalType": "contract IJBDirectory",
            "name": "_directory",
            "type": "address"
          },
          {
            "internalType": "contract IJBFundingCycleStore",
            "name": "_fundingCycleStore",
            "type": "address"
          },
          {
            "internalType": "contract IJBPrices",
            "name": "_prices",
            "type": "address"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "inputs": [],
        "name": "CURRENCY_MISMATCH",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "DISTRIBUTION_AMOUNT_LIMIT_REACHED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "FUNDING_CYCLE_DISTRIBUTION_PAUSED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "FUNDING_CYCLE_PAYMENT_PAUSED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "FUNDING_CYCLE_REDEEM_PAUSED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INADEQUATE_CONTROLLER_ALLOWANCE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INADEQUATE_PAYMENT_TERMINAL_STORE_BALANCE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INSUFFICIENT_TOKENS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_FUNDING_CYCLE",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "PAYMENT_TERMINAL_MIGRATION_NOT_ALLOWED",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "prod1",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "denominator",
            "type": "uint256"
          }
        ],
        "name": "PRBMath__MulDivOverflow",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "contract IJBSingleTokenPaymentTerminal",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract IJBSingleTokenPaymentTerminal",
            "name": "_terminal",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          }
        ],
        "name": "currentOverflowOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_tokenCount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_totalSupply",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_overflow",
            "type": "uint256"
          }
        ],
        "name": "currentReclaimableOverflowOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract IJBSingleTokenPaymentTerminal",
            "name": "_terminal",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_tokenCount",
            "type": "uint256"
          },
          {
            "internalType": "bool",
            "name": "_useTotalOverflow",
            "type": "bool"
          }
        ],
        "name": "currentReclaimableOverflowOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_decimals",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_currency",
            "type": "uint256"
          }
        ],
        "name": "currentTotalOverflowOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "directory",
        "outputs": [
          {
            "internalType": "contract IJBDirectory",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "fundingCycleStore",
        "outputs": [
          {
            "internalType": "contract IJBFundingCycleStore",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "prices",
        "outputs": [
          {
            "internalType": "contract IJBPrices",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          }
        ],
        "name": "recordAddedBalanceFor",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_currency",
            "type": "uint256"
          }
        ],
        "name": "recordDistributionFor",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "number",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "configuration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "basedOn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "start",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycle",
            "name": "fundingCycle",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "distributedAmount",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          }
        ],
        "name": "recordMigration",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "balance",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_payer",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "address",
                "name": "token",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "value",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "decimals",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currency",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBTokenAmount",
            "name": "_amount",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_baseWeightCurrency",
            "type": "uint256"
          },
          {
            "internalType": "address",
            "name": "_beneficiary",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "_memo",
            "type": "string"
          },
          {
            "internalType": "bytes",
            "name": "_metadata",
            "type": "bytes"
          }
        ],
        "name": "recordPaymentFrom",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "number",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "configuration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "basedOn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "start",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycle",
            "name": "fundingCycle",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "tokenCount",
            "type": "uint256"
          },
          {
            "internalType": "contract IJBPayDelegate",
            "name": "delegate",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "memo",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "_holder",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_tokenCount",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "_memo",
            "type": "string"
          },
          {
            "internalType": "bytes",
            "name": "_metadata",
            "type": "bytes"
          }
        ],
        "name": "recordRedemptionFor",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "number",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "configuration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "basedOn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "start",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycle",
            "name": "fundingCycle",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "reclaimAmount",
            "type": "uint256"
          },
          {
            "internalType": "contract IJBRedemptionDelegate",
            "name": "delegate",
            "type": "address"
          },
          {
            "internalType": "string",
            "name": "memo",
            "type": "string"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "_projectId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_amount",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "_currency",
            "type": "uint256"
          }
        ],
        "name": "recordUsedAllowanceOf",
        "outputs": [
          {
            "components": [
              {
                "internalType": "uint256",
                "name": "number",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "configuration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "basedOn",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "start",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "duration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "discountRate",
                "type": "uint256"
              },
              {
                "internalType": "contract IJBFundingCycleBallot",
                "name": "ballot",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "metadata",
                "type": "uint256"
              }
            ],
            "internalType": "struct JBFundingCycle",
            "name": "fundingCycle",
            "type": "tuple"
          },
          {
            "internalType": "uint256",
            "name": "usedAmount",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract IJBSingleTokenPaymentTerminal",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "usedDistributionLimitOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract IJBSingleTokenPaymentTerminal",
            "name": "",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "usedOverflowAllowanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Adheres to: IJBSingleTokenPaymentTerminalStore: General interface for the methods in this contract that interact with the blockchain's state according to the protocol's rules.Inherits from - ReentrancyGuard: Contract module that helps prevent reentrant calls to a function.",
      "kind": "dev",
      "methods": {
        "constructor": {
          "params": {
            "_directory": "A contract storing directories of terminals and controllers for each project.",
            "_fundingCycleStore": "A contract storing all funding cycle configurations.",
            "_prices": "A contract that exposes price feeds."
          }
        },
        "currentOverflowOf(address,uint256)": {
          "details": "The current overflow is represented as a fixed point number with the same amount of decimals as the specified terminal.",
          "params": {
            "_projectId": "The ID of the project to get overflow for.",
            "_terminal": "The terminal for which the overflow is being calculated."
          },
          "returns": {
            "_0": "The current amount of overflow that project has in the specified terminal."
          }
        },
        "currentReclaimableOverflowOf(address,uint256,uint256,bool)": {
          "details": " If the project has an active funding cycle reconfiguration ballot, the project's ballot redemption rate is used.The current reclaimable overflow is returned in terms of the specified terminal's currency.The reclaimable overflow is represented as a fixed point number with the same amount of decimals as the specified terminal.",
          "params": {
            "_projectId": "The ID of the project to get the reclaimable overflow amount for.",
            "_terminal": "The terminal from which the reclaimable amount would come.",
            "_tokenCount": "The number of tokens to make the calculation with, as a fixed point number with 18 decimals.",
            "_useTotalOverflow": "A flag indicating whether the overflow used in the calculation should be summed from all of the project's terminals. If false, overflow should be limited to the amount in the specified `_terminal`."
          },
          "returns": {
            "_0": "The amount of overflowed tokens that can be reclaimed, as a fixed point number with the same number of decimals as the provided `_terminal`."
          }
        },
        "currentReclaimableOverflowOf(uint256,uint256,uint256,uint256)": {
          "details": " If the project has an active funding cycle reconfiguration ballot, the project's ballot redemption rate is used.",
          "params": {
            "_overflow": "The amount of overflow to make the calculation with, as a fixed point number.",
            "_projectId": "The ID of the project to get the reclaimable overflow amount for.",
            "_tokenCount": "The number of tokens to make the calculation with, as a fixed point number with 18 decimals.",
            "_totalSupply": "The total number of tokens to make the calculation with, as a fixed point number with 18 decimals."
          },
          "returns": {
            "_0": "The amount of overflowed tokens that can be reclaimed, as a fixed point number with the same number of decimals as the provided `_overflow`."
          }
        },
        "currentTotalOverflowOf(uint256,uint256,uint256)": {
          "params": {
            "_currency": "The currency that the total overflow should be in terms of.",
            "_decimals": "The number of decimals that the fixed point overflow should include.",
            "_projectId": "The ID of the project to get total overflow for."
          },
          "returns": {
            "_0": "The current total amount of overflow that project has across all terminals."
          }
        },
        "recordAddedBalanceFor(uint256,uint256)": {
          "details": "The msg.sender must be an IJBSingleTokenPaymentTerminal. ",
          "params": {
            "_amount": "The amount of terminal tokens added, as a fixed point number with the same amount of decimals as its relative terminal.",
            "_projectId": "The ID of the project to which the funds being added belong."
          }
        },
        "recordDistributionFor(uint256,uint256,uint256)": {
          "details": "The msg.sender must be an IJBSingleTokenPaymentTerminal. ",
          "params": {
            "_amount": "The amount to use from the distribution limit, as a fixed point number.",
            "_currency": "The currency of the `_amount`. This must match the project's current funding cycle's currency.",
            "_projectId": "The ID of the project that is having funds distributed."
          },
          "returns": {
            "distributedAmount": "The amount of terminal tokens distributed, as a fixed point number with the same amount of decimals as its relative terminal.",
            "fundingCycle": "The funding cycle during which the distribution was made."
          }
        },
        "recordMigration(uint256)": {
          "details": "The msg.sender must be an IJBSingleTokenPaymentTerminal. The amount returned is in terms of the msg.senders tokens.",
          "params": {
            "_projectId": "The ID of the project being migrated."
          },
          "returns": {
            "balance": "The project's migrated balance, as a fixed point number with the same amount of decimals as its relative terminal."
          }
        },
        "recordPaymentFrom(address,(address,uint256,uint256,uint256),uint256,uint256,address,string,bytes)": {
          "details": "Mint's the project's tokens according to values provided by a configured data source. If no data source is configured, mints tokens proportional to the amount of the contribution.The msg.sender must be an IJBSingleTokenPaymentTerminal. The amount specified in the params is in terms of the msg.sender's tokens.",
          "params": {
            "_amount": "The amount of tokens being paid. Includes the token being paid, the value, the number of decimals included, and the currency of the amount.",
            "_baseWeightCurrency": "The currency to base token issuance on.",
            "_beneficiary": "The specified address that should be the beneficiary of anything that results from the payment.",
            "_memo": "A memo to pass along to the emitted event, and passed along to the funding cycle's data source.",
            "_metadata": "Bytes to send along to the data source, if one is provided.",
            "_payer": "The original address that sent the payment to the terminal.",
            "_projectId": "The ID of the project being paid."
          },
          "returns": {
            "delegate": "A delegate contract to use for subsequent calls.",
            "fundingCycle": "The project's funding cycle during which payment was made.",
            "memo": "A memo that should be passed along to the emitted event.",
            "tokenCount": "The number of project tokens that were minted, as a fixed point number with 18 decimals."
          }
        },
        "recordRedemptionFor(address,uint256,uint256,string,bytes)": {
          "details": "Redeems the project's tokens according to values provided by a configured data source. If no data source is configured, redeems tokens along a redemption bonding curve that is a function of the number of tokens being burned.The msg.sender must be an IJBSingleTokenPaymentTerminal. The amount specified in the params is in terms of the msg.senders tokens.",
          "params": {
            "_holder": "The account that is having its tokens redeemed.",
            "_memo": "A memo to pass along to the emitted event.",
            "_metadata": "Bytes to send along to the data source, if one is provided.",
            "_projectId": "The ID of the project to which the tokens being redeemed belong.",
            "_tokenCount": "The number of project tokens to redeem, as a fixed point number with 18 decimals."
          },
          "returns": {
            "delegate": "A delegate contract to use for subsequent calls.",
            "fundingCycle": "The funding cycle during which the redemption was made.",
            "memo": "A memo that should be passed along to the emitted event.",
            "reclaimAmount": "The amount of terminal tokens reclaimed, as a fixed point number with 18 decimals."
          }
        },
        "recordUsedAllowanceOf(uint256,uint256,uint256)": {
          "details": "The msg.sender must be an IJBSingleTokenPaymentTerminal. ",
          "params": {
            "_amount": "The amount to use from the allowance, as a fixed point number. ",
            "_currency": "The currency of the `_amount`. Must match the currency of the overflow allowance.",
            "_projectId": "The ID of the project to use the allowance of."
          },
          "returns": {
            "fundingCycle": "The funding cycle during which the overflow allowance is being used.",
            "usedAmount": "The amount of terminal tokens used, as a fixed point number with the same amount of decimals as its relative terminal."
          }
        }
      },
      "stateVariables": {
        "balanceOf": {
          "details": "The used distribution limit is represented as a fixed point number with the same amount of decimals as its relative terminal. _terminal The terminal to which the balance applies. _projectId The ID of the project to get the balance of."
        },
        "usedDistributionLimitOf": {
          "details": "Increases as projects use their preconfigured distribution limits.The used distribution limit is represented as a fixed point number with the same amount of decimals as its relative terminal. _terminal The terminal to which the used distribution limit applies. _projectId The ID of the project to get the used distribution limit of. _fundingCycleNumber The number of the funding cycle during which the distribution limit was used."
        },
        "usedOverflowAllowanceOf": {
          "details": "Increases as projects use their allowance.The used allowance is represented as a fixed point number with the same amount of decimals as its relative terminal. _terminal The terminal to which the overflow allowance applies. _projectId The ID of the project to get the used overflow allowance of. _configuration The configuration of the during which the allowance was used."
        }
      },
      "version": 1
    },
    "userdoc": {
      "errors": {
        "PRBMath__MulDivOverflow(uint256,uint256)": [
          {
            "notice": "Emitted when the result overflows uint256."
          }
        ]
      },
      "kind": "user",
      "methods": {
        "balanceOf(address,uint256)": {
          "notice": "The amount of tokens that each project has for each terminal, in terms of the terminal's token."
        },
        "currentOverflowOf(address,uint256)": {
          "notice": "Gets the current overflowed amount in a terminal for a specified project."
        },
        "currentReclaimableOverflowOf(address,uint256,uint256,bool)": {
          "notice": "The current amount of overflowed tokens from a terminal that can be reclaimed by the specified number of tokens, using the total token supply and overflow in the ecosystem."
        },
        "currentReclaimableOverflowOf(uint256,uint256,uint256,uint256)": {
          "notice": "The current amount of overflowed tokens from a terminal that can be reclaimed by the specified number of tokens, using the specified total token supply and overflow amounts."
        },
        "currentTotalOverflowOf(uint256,uint256,uint256)": {
          "notice": "Gets the current overflowed amount for a specified project across all terminals."
        },
        "directory()": {
          "notice": "The directory of terminals and controllers for projects."
        },
        "fundingCycleStore()": {
          "notice": "The contract storing all funding cycle configurations."
        },
        "prices()": {
          "notice": "The contract that exposes price feeds."
        },
        "recordAddedBalanceFor(uint256,uint256)": {
          "notice": "Records newly added funds for the project."
        },
        "recordDistributionFor(uint256,uint256,uint256)": {
          "notice": "Records newly distributed funds for a project."
        },
        "recordMigration(uint256)": {
          "notice": "Records the migration of funds from this store."
        },
        "recordPaymentFrom(address,(address,uint256,uint256,uint256),uint256,uint256,address,string,bytes)": {
          "notice": "Records newly contributed tokens to a project."
        },
        "recordRedemptionFor(address,uint256,uint256,string,bytes)": {
          "notice": "Records newly redeemed tokens of a project."
        },
        "recordUsedAllowanceOf(uint256,uint256,uint256)": {
          "notice": "Records newly used allowance funds of a project."
        },
        "usedDistributionLimitOf(address,uint256,uint256)": {
          "notice": "The amount of funds that a project has distributed from its limit during the current funding cycle for each terminal, in terms of the distribution limit's currency."
        },
        "usedOverflowAllowanceOf(address,uint256,uint256)": {
          "notice": "The amount of funds that a project has used from its allowance during the current funding cycle configuration for each terminal, in terms of the overflow allowance's currency."
        }
      },
      "notice": "Manages all bookkeeping for inflows and outflows of funds from any ISingleTokenPaymentTerminal.",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "node_modules/@jbx-protocol/contracts-v2/contracts/JBSingleTokenPaymentTerminalStore.sol": "JBSingleTokenPaymentTerminalStore"
    },
    "evmVersion": "berlin",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@jbx-protocol/=node_modules/@jbx-protocol/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":@paulrberg/=node_modules/@paulrberg/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":prb-math/=node_modules/prb-math/"
    ]
  },
  "sources": {
    "node_modules/@jbx-protocol/contracts-v2/contracts/JBSingleTokenPaymentTerminalStore.sol": {
      "keccak256": "0xe6214f8cd4a399ced8fad3dddb8bb80c1b75680ae06e4a24a1f52d0d88c78cad",
      "license": "MIT",
      "urls": [
        "bzz-raw://1c6f01ea9ef00ee4c3f547db374548a59ac5ff14821fe701ab6da61acbd63fa5",
        "dweb:/ipfs/QmT8BJfgBoSQETVkTpCx1QZbr7is4XeHoTWTMTq8iEZ5gD"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/enums/JBBallotState.sol": {
      "keccak256": "0xadf07fd49f7e0947006fa1921bc7fd8fb532e8fecf3b9266721a8b7e43907461",
      "license": "MIT",
      "urls": [
        "bzz-raw://7d4dd83fa3b7f679c9083eb172eb869a62dacf06eb5875dac7418fe3e5ceab1d",
        "dweb:/ipfs/QmTjNHiqPw6k8xKxExt4hL4xvM3NpFkab3CzbfyTMPXuRD"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBController.sol": {
      "keccak256": "0xa313569eaff79f9443e12878b2efbb4160d50682c0f9e7304c42ecd600c42d96",
      "license": "MIT",
      "urls": [
        "bzz-raw://af76483a78d8923b177dda917705e33e5b9955c4a4fcbf3435a2ea52e7bc50c0",
        "dweb:/ipfs/QmPDnt4TGDNaY2q84bWz6kaEq8xMWLX85G3EqU3SxjzxGD"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBDirectory.sol": {
      "keccak256": "0x9e7f0d3590b3ddc3b667fcdacaa53b627e4d2b3a912360597fb0ffa413518167",
      "license": "MIT",
      "urls": [
        "bzz-raw://7465d2352978a69eba9c4af7a88c54bf14476a1e76d14807f8722343b266b7fb",
        "dweb:/ipfs/QmdsHrAVKtzESXe48953Z9MXurQkWa2rGnhKr2xzG5jtV4"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBFundingCycleBallot.sol": {
      "keccak256": "0xdc8c8bed613f5759c958b7b0d646032b4337a349a8ecea5ffeb167623f2f29f5",
      "license": "MIT",
      "urls": [
        "bzz-raw://e8d33d7214467f8d580781e24a87ffcfc98df6131dca0c0762ee4d2cedaba76d",
        "dweb:/ipfs/QmTkdtenb47dwcZ76iHThKoyN8gaBCAuW4PZDgNVL8W7Uo"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBFundingCycleDataSource.sol": {
      "keccak256": "0x8fe4fdc2cd71cd0b7202bddb7078f16c8eea746c8481ee9b3b06a0e01e8e7d6b",
      "license": "MIT",
      "urls": [
        "bzz-raw://f08117bf36e3b2ea9349c49d2ed8961bba73566d162e779a052d9fa0db2a3c9e",
        "dweb:/ipfs/Qme6w3qHHvmYYEo2v8ez9fNFWTThSuiFVJ2rLYwqNhhtc6"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBFundingCycleStore.sol": {
      "keccak256": "0xf75791cd5b71bc6773cf56c92501e3f255a406eaedea781cb57cea2fa1e4ef20",
      "license": "MIT",
      "urls": [
        "bzz-raw://697e21258b99ac2c4a2b73bcb8c8a47400737ecf5d3dfa6ca5a7b6f7d6be9c57",
        "dweb:/ipfs/Qmcdg3mEvgbtBnWhjZFubqH8sZU791jtXrWWpohKzN9tkG"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBMigratable.sol": {
      "keccak256": "0xd24d7f91e5276f36811695e1e45283947cbd6e5cff912384e5f3e55ef4acadf3",
      "license": "MIT",
      "urls": [
        "bzz-raw://0afe14bf2128e3c055a89d169d2df51816d221e1a89150718ecceac32427a995",
        "dweb:/ipfs/QmQDbyEyMVh5vQaYcDHrTSrbtJqEc9NYQRksKhTuZnv2Ht"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBPayDelegate.sol": {
      "keccak256": "0xf7a9ef2df665e1c85a461fadb3cd54f6270c181eac96064005bde19e54d0ffa9",
      "license": "MIT",
      "urls": [
        "bzz-raw://521eafc73d727317a65c8a0a27522de68a62988d005b632dac5cff96983ce892",
        "dweb:/ipfs/QmesPTKhG1T3X6H3QZx4JeYL17ebfahMoajPpAxrHLZdrr"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBPaymentTerminal.sol": {
      "keccak256": "0xf50279115f05568c12c254eb2c078b81a0c761f8cc985220e30ec15679118caa",
      "license": "MIT",
      "urls": [
        "bzz-raw://48d3576fd54ae9b9c27338cba0ad91aec18606c55d32a85aeddf1b599834a6cb",
        "dweb:/ipfs/QmUeqF8TRpzYC1MRNQXCWzVFvTQ7iBqfQQHpSQF7LbstFE"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBPriceFeed.sol": {
      "keccak256": "0xac22ef5e35cdd64b1467416fd142801856ce867ecde41582f3aa437c955c9be2",
      "license": "MIT",
      "urls": [
        "bzz-raw://56907961729133f00949ac96c54b5f3a9b17450304de8f8d86b8ee29edbaacde",
        "dweb:/ipfs/QmX72N8nCvE2vvuH3XrUptVNWTYWHFjeERp6Cnm6ViTN7r"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBPrices.sol": {
      "keccak256": "0x0d9c3fce264953aaeca00db1f8d8a3cf99876fa63366f5a2148f7966967b39b7",
      "license": "MIT",
      "urls": [
        "bzz-raw://2dae5c36fbb60f884efc4eb6abe329fe15b9e63ee44c5d10795aacb6f842209a",
        "dweb:/ipfs/QmQ1KBHAa7wRB881UMVX4Rb85mndktbuzEAtT8M8D7JNKY"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBProjects.sol": {
      "keccak256": "0x602bad7e8cce6e9d53fe5e3532c5d4428d02206f8df48b246aac7ee8a6dcc98d",
      "license": "MIT",
      "urls": [
        "bzz-raw://e8b66a1813167e248944b75bcd0af559284e4a2482e9e9ade3c6e8b1fd59eb6e",
        "dweb:/ipfs/QmaNer7KD1EMensiJFABJ31ednVRnZcV3wfcx6FPFajoM9"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBRedemptionDelegate.sol": {
      "keccak256": "0xfc91761a568e60e1a1429ac11b0d1b57c627ef59f4011b17df4f9f540b7dd60d",
      "license": "MIT",
      "urls": [
        "bzz-raw://acf3264c04b881d7f59608c9f4e5c2e7333c2beb4c4f4468d6626c74aaa5e535",
        "dweb:/ipfs/QmPv6rH6gPHSpbRCGuMnZyGjV5iSkfbKjJsmD5Cxegn5CK"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBSingleTokenPaymentTerminal.sol": {
      "keccak256": "0x72285da98154a8fdaa69728e6422587106aead823996b73c54d7a5bff0c52460",
      "license": "MIT",
      "urls": [
        "bzz-raw://a6dfb2233856ab18ab05f8479e586eed6380de936d3237bb54262f64a4608ef8",
        "dweb:/ipfs/QmNZeCQRngNSpjrKUgRPwFm36tECrcamhoyKDF2kVbnoWe"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBSingleTokenPaymentTerminalStore.sol": {
      "keccak256": "0x5ea8a6454764db9267174e769a7155b04448835b6c86daaa99ab3733cf55725f",
      "license": "MIT",
      "urls": [
        "bzz-raw://db4c70425b5c3529670987702500c0b8353c9500790f8d04ac112b3ed04c7b1a",
        "dweb:/ipfs/QmeKq5wcM6eKQWLpFS6i3V9FWdkgnKCin7TWN6VU8Uioae"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBSplitAllocator.sol": {
      "keccak256": "0x717575a0a4a20f8598f44d22a3fd3e282f34f4b33543a0d4b36ba3b59ed8cd04",
      "license": "MIT",
      "urls": [
        "bzz-raw://1821b7b022486b81a58fd86846d917173211a85fceaec19e2fe27052e79967f9",
        "dweb:/ipfs/QmU6vL32otjX5CQbypVJN71qcJ4q7TBpcEoQj27YbnJfkB"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBSplitsStore.sol": {
      "keccak256": "0x11951e705a11eda101218c0996816ef39c89d0fde964f42dd67a89d00e4c7c69",
      "license": "MIT",
      "urls": [
        "bzz-raw://fd7d1b7a74ec00f6dae52193deeb3ac405f704817821017bd5dc6ba52c2ac47e",
        "dweb:/ipfs/QmT3J7jLqT1HjYgBQEStW4PAE6QXMzpNmRHpwZHFegbJpL"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBToken.sol": {
      "keccak256": "0xf5ec0861b067a5e58f2bcca44892ea8d4a42ab8a7c95bd4d3bbddad33c8727f5",
      "license": "MIT",
      "urls": [
        "bzz-raw://649724a0fd8c695fcd4ad4ffdb620a9309f951989eef22abd7bcaa86837b7e98",
        "dweb:/ipfs/Qmf1VZsz5gyMHohWndAx2gfSSpzAuKLSEHrtaW2kdYe3ng"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBTokenStore.sol": {
      "keccak256": "0x2b7a6cdb457e710161079a46683e9804d66d4cc7d18be8f64de25ba7bfadf9ef",
      "license": "MIT",
      "urls": [
        "bzz-raw://4fb05089e0fb440fea54a457dc31940c46a7bdcaacc449ca816c4f55f36bccdd",
        "dweb:/ipfs/QmdpnuaWGngJd5a5x3MQDTQhF3VYHnbM9FTsiS6DwVtjRe"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBTokenUriResolver.sol": {
      "keccak256": "0xa64ece706d7ce399095f403b08383391c089da4995b5ee000b278d93d242a475",
      "license": "MIT",
      "urls": [
        "bzz-raw://900eeb480ed168ada8a738381bb1ea9c92a007e7000a1f2e5d7da02b3010a19b",
        "dweb:/ipfs/QmfKS6Mi6wGsT8gP3AETYKaXCiwFe9dzzFTEEkaFF7xoWg"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/libraries/JBConstants.sol": {
      "keccak256": "0x31517dfd8accf961f247cefd72bf8a76c20747cd8ed65cedf817dd7aa9a0082f",
      "license": "MIT",
      "urls": [
        "bzz-raw://29186e669b1130e1f35347a51fb40ced9b7d42d504f2133b608f4ea49aae211d",
        "dweb:/ipfs/QmduXpR7j1UroX94MCNA7zNBqAC3v18j2FMwki7T8rBEFv"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/libraries/JBCurrencies.sol": {
      "keccak256": "0x3077e365b09d45e3a82d6710bfda7323a0366c3cafc318ea9dc442a1a93036d7",
      "license": "MIT",
      "urls": [
        "bzz-raw://b3513cb05d97dfb8d675c30055d2ab21909294a946eeffe1678ba49a7f0d8573",
        "dweb:/ipfs/QmerkmEBiE2CRoeGE5MJtjXLjHw6XgD5otCD3Cd5niJ6WX"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/libraries/JBFixedPointNumber.sol": {
      "keccak256": "0x98b16f5cc7e0b317ae7d0f429f05a5268c8439053d9e953619e0baaf996a012a",
      "license": "MIT",
      "urls": [
        "bzz-raw://417bf52b2695c08c883d9c78da1d3b325a2e4747fd163c15bbdb449ac058b49f",
        "dweb:/ipfs/QmYucFfHz1wLzbDzf9uqXYscJgKquAhowXznVi2tHVsfhi"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/libraries/JBFundingCycleMetadataResolver.sol": {
      "keccak256": "0x20bb41c81635b2664337d558430e4182e678715b5929cddd28b3f32455e79feb",
      "license": "MIT",
      "urls": [
        "bzz-raw://884eeb0708aa6fda5fd7c9c38de651402c129eaae7e62bcfcb8019f88fc25c28",
        "dweb:/ipfs/QmbE2bRDTQKKhdedZuUyV3A3XPyw8RQ1WL8NnwzNzzm4kt"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/libraries/JBGlobalFundingCycleMetadataResolver.sol": {
      "keccak256": "0x95f1c7c968a209c9f7b76d2e508332001ebbfb308b565cd222cae4d7396cbe0b",
      "license": "MIT",
      "urls": [
        "bzz-raw://cd909a46a899b238ac52022f91a8c23d2e1967ebc23109c0b5571f274a65ff64",
        "dweb:/ipfs/QmPKLaiyVhs8viaW4mUPNWqQWfAd26QnvaFJ9LdrRhDzZX"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBDidPayData.sol": {
      "keccak256": "0x5466643df68a7bb1f88b781b7ac74379a1428d700edb1a22cd211c1fb8af458c",
      "license": "MIT",
      "urls": [
        "bzz-raw://ddd2e26dbf3d79cee9ef14bb9671a18471f6c5ee0e8252dda24d17e0919882d8",
        "dweb:/ipfs/QmYZknzBV5jzJXNJE4vAkxqBXfpi7WBS4XUqXPTGzEfftd"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBDidRedeemData.sol": {
      "keccak256": "0x52e35ebfda7cf16c90d920c63e450663c0d2b3395554b313e742d8fe74dc187f",
      "license": "MIT",
      "urls": [
        "bzz-raw://5fb8b3da0c5dab17d5263562de358af381aa6114363a97953ef5a02432f34fec",
        "dweb:/ipfs/QmSnnQwrGzXMvqjRsezL3rTgsvFpnm8QX9TjyCNY7cz3x3"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBFundAccessConstraints.sol": {
      "keccak256": "0x47e778e94bec262633c2f9fe69bebd7e76cc8bedf6b3d8ba0481acdf3619cb5f",
      "license": "MIT",
      "urls": [
        "bzz-raw://ca421356264ae3cb4b32bbf795be310bc62c2b3826c8ea53df3615c9beb66699",
        "dweb:/ipfs/QmcPEyvKcwbAjbnWoH54DG9DiUs835RTZSo6PJPN1H4L51"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBFundingCycle.sol": {
      "keccak256": "0x7e1ee378705e677298b955bd82b7c79b962e1c2e20f840eb8c491aba595e4905",
      "license": "MIT",
      "urls": [
        "bzz-raw://4d2361ccc893ff87555ba225a5518e7c54d26faf5f51111d3fdd6b9bb9a2a608",
        "dweb:/ipfs/QmStFS5zKEbbbLZwBiNDBD7oqSKFzjZuYGReZrsnkzpuGR"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBFundingCycleData.sol": {
      "keccak256": "0xfc1c73d1b01782bbdfdd73d5d25f075e6c33dd37414638b63664063a0d1692cc",
      "license": "MIT",
      "urls": [
        "bzz-raw://751db5a5a4c7bb7b836a842688c8590c4557c660725df68e87c2935ed7fc995c",
        "dweb:/ipfs/QmPnwDBtcUhgs3L9gnEcdFXpJEdu8QcTMUFMQfLcwU53YZ"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBFundingCycleMetadata.sol": {
      "keccak256": "0xbcf89f0855dc558c7761c6eb6942bd06c3ba9bf0cd1650c55930bfea33c3036f",
      "license": "MIT",
      "urls": [
        "bzz-raw://6c34df7dbb636876505753545213008e39fe20f04b76bc257689359b96f3d7fd",
        "dweb:/ipfs/QmVyh1bzmh98V4bxB2C6jQSxY4u9hBSNURYM1uJyR89whq"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBGlobalFundingCycleMetadata.sol": {
      "keccak256": "0x7f7855ebb0bc3ad0454c183a15730e2623a4a871aee5dbc98223050f35b224a3",
      "license": "MIT",
      "urls": [
        "bzz-raw://39c0f9b5a013cbb6cddb2da6c6a733bd218601c7a1c7ea4611246effcaa94b05",
        "dweb:/ipfs/QmcfCXpiorzoUnJNd55tNGXqPPaVJLYx6mypD6NwW1N296"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBGroupedSplits.sol": {
      "keccak256": "0x99e837531ffe541b8dd2eaf97c0c36a32e53ce24aaabac97c5b70dd93e7e86f5",
      "license": "MIT",
      "urls": [
        "bzz-raw://5a865fa47ad6006edfa63624eb0ec244e63f28a2bf99dd60103622e03be6fd95",
        "dweb:/ipfs/QmRYWq9W7g3YHW7pampHvSM28Zp3nGJxCkGdxP6CXntvvV"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBPayParamsData.sol": {
      "keccak256": "0x1e36a8a71ed2274fd31b0475e69943acc6a2091397a0d6c4fa99db05d9aaa0fd",
      "license": "MIT",
      "urls": [
        "bzz-raw://217ed226bf196ab19dd8e9fb340c1553b9f3a749ba450f9b6a36b42cb277e8a3",
        "dweb:/ipfs/Qmb89jN5p3wEVCRx2BaUizHyDZJcihPoPKCNF3Ww3TX9by"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBProjectMetadata.sol": {
      "keccak256": "0x5ea56d46d07944aacfe540ee9290f10a70d77b537650a0b28975e2e88fa5b9a4",
      "license": "MIT",
      "urls": [
        "bzz-raw://afdac58b0c0decc7576d5581757230f0d60c2415bb7a552e507e2833de7df9fa",
        "dweb:/ipfs/QmcsdVf8MHP5J13feRQzPvUZZGyohYmqeTWZuvvLsi2Czw"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBRedeemParamsData.sol": {
      "keccak256": "0xefe0290796bd282e478bdcfc1eb91c1bb02a3c910edd89b67db9c7d7f566c069",
      "license": "MIT",
      "urls": [
        "bzz-raw://dacda7ca85d6b4b832c40eae79e2362475d7111d397aaff3fb31c5811a9854a7",
        "dweb:/ipfs/QmQ2TymkG7wacEuGMCC2Ep2HWXRgAexhMt75YJbe9z19Mt"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBSplit.sol": {
      "keccak256": "0x03b5c632ad8c3b273d550bb334735d686fafa673b68ddb27fb77400d0de1eca1",
      "license": "MIT",
      "urls": [
        "bzz-raw://4928af39a15e09d829fa8952c455b3559b04917be91d32d89b175704954a5a13",
        "dweb:/ipfs/QmcL5gKwxhh2tujBvuw6KdiRUtKhSGuyvs4m7S6eacz2gn"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBSplitAllocationData.sol": {
      "keccak256": "0x11f19479dc1d20cc07f52edc994d24b2ac08f8074d03a72ccee68af40f884b02",
      "license": "MIT",
      "urls": [
        "bzz-raw://cfd92eebebaec9f468a5c509b5fc5611bdb705509f3e877ae78efd053384de1e",
        "dweb:/ipfs/QmVGfbk2mEZa1WKW4kAmtcbx3JFGgoQS5Cuv6c5WvxX7S4"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBTokenAmount.sol": {
      "keccak256": "0xc606ed3c46a59e2e037897d2d749867919756d01f8e75a495d2dd4e03c3535fc",
      "license": "MIT",
      "urls": [
        "bzz-raw://4d68ccb6e9c7cf11f214d3812a0cc8de9918b601c62f39950172375d4be415f9",
        "dweb:/ipfs/QmRKhczPkxzVCKQ657EuLBftF5J2VVZKQknjWUa9sJ48rn"
      ]
    },
    "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
      "keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
      "license": "MIT",
      "urls": [
        "bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
        "dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
      "license": "MIT",
      "urls": [
        "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
        "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    },
    "node_modules/@paulrberg/contracts/math/PRBMath.sol": {
      "keccak256": "0x42821345981bc0434a90ba2268a2f5278dfe9e38166981d72fc7f3b776a29495",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://92f28eea1e22d4e7998617483eef42d89eb97b364414cf41041c86aa633d3b47",
        "dweb:/ipfs/QmT5entVZFjbb3ZGZZvNAGqtwerCgwjCfN1Qmvf8jKPBXj"
      ]
    },
    "node_modules/prb-math/contracts/PRBMath.sol": {
      "keccak256": "0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://3ba3ad78675323279adfc09038eaa14f4cde3f3173e5d2d60b9c30bf7099aa7b",
        "dweb:/ipfs/QmV56KGJZQG681hwd7JQDv3KjAa9JSGF88ShGx8YBCuvcR"
      ]
    }
  },
  "version": 1
}