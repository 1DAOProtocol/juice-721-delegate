{
  "compiler": {
    "version": "0.8.6+commit.11564f7e"
  },
  "language": "Solidity",
  "output": {
    "abi": [
      {
        "inputs": [],
        "name": "ALEADY_MINTED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "APPROVAL_TO_CURRENT_OWNER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "APPROVE_TO_CALLER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "CALLER_NOT_OWNER_OR_APPROVED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INCORRECT_OWNER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_PAYMENT_EVENT",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_REDEMPTION_EVENT",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "INVALID_TOKEN_ID",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "MINT_TO_ZERO",
        "type": "error"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "prod1",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "denominator",
            "type": "uint256"
          }
        ],
        "name": "PRBMath__MulDivOverflow",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "TRANSFER_TO_NON_IMPLEMENTER",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "TRANSFER_TO_ZERO_ADDRESS",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "UNAUTHORIZED",
        "type": "error"
      },
      {
        "inputs": [],
        "name": "UNEXPECTED",
        "type": "error"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "approved",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "ApprovalForAll",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "string",
            "name": "baseUri",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "SetBaseUri",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "string",
            "name": "contractUri",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "SetContractUri",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "contract IJBTokenUriResolver",
            "name": "newResolver",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "caller",
            "type": "address"
          }
        ],
        "name": "SetTokenUriResolver",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "balance",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "payer",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "amount",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "projectTokenCount",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "beneficiary",
                "type": "address"
              },
              {
                "internalType": "bool",
                "name": "preferClaimedTokens",
                "type": "bool"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBDidPayData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "didPay",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "projectTokenCount",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "reclaimedAmount",
                "type": "tuple"
              },
              {
                "internalType": "address payable",
                "name": "beneficiary",
                "type": "address"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBDidRedeemData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "didRedeem",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "directory",
        "outputs": [
          {
            "internalType": "contract IJBDirectory",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "getApproved",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          }
        ],
        "name": "isApprovedForAll",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "ownerOf",
        "outputs": [
          {
            "internalType": "address",
            "name": "",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "payer",
                "type": "address"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "amount",
                "type": "tuple"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "internalType": "address",
                "name": "beneficiary",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "weight",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "reservedRate",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBPayParamsData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "payParams",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "weight",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "internalType": "contract IJBPayDelegate",
            "name": "delegate",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "projectId",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "components": [
              {
                "internalType": "contract IJBPaymentTerminal",
                "name": "terminal",
                "type": "address"
              },
              {
                "internalType": "address",
                "name": "holder",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "projectId",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "currentFundingCycleConfiguration",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "tokenCount",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "totalSupply",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "overflow",
                "type": "uint256"
              },
              {
                "components": [
                  {
                    "internalType": "address",
                    "name": "token",
                    "type": "address"
                  },
                  {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "decimals",
                    "type": "uint256"
                  },
                  {
                    "internalType": "uint256",
                    "name": "currency",
                    "type": "uint256"
                  }
                ],
                "internalType": "struct JBTokenAmount",
                "name": "reclaimAmount",
                "type": "tuple"
              },
              {
                "internalType": "bool",
                "name": "useTotalOverflow",
                "type": "bool"
              },
              {
                "internalType": "uint256",
                "name": "redemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "ballotRedemptionRate",
                "type": "uint256"
              },
              {
                "internalType": "string",
                "name": "memo",
                "type": "string"
              },
              {
                "internalType": "bytes",
                "name": "metadata",
                "type": "bytes"
              }
            ],
            "internalType": "struct JBRedeemParamsData",
            "name": "_data",
            "type": "tuple"
          }
        ],
        "name": "redeemParams",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "reclaimAmount",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "memo",
            "type": "string"
          },
          {
            "internalType": "contract IJBRedemptionDelegate",
            "name": "delegate",
            "type": "address"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          },
          {
            "internalType": "bytes",
            "name": "data",
            "type": "bytes"
          }
        ],
        "name": "safeTransferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "operator",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "approved",
            "type": "bool"
          }
        ],
        "name": "setApprovalForAll",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_baseUri",
            "type": "string"
          }
        ],
        "name": "setBaseUri",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_contractMetadataUri",
            "type": "string"
          }
        ],
        "name": "setContractUri",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "contract IJBTokenUriResolver",
            "name": "_tokenUriResolverAddress",
            "type": "address"
          }
        ],
        "name": "setTokenUriResolver",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "bytes4",
            "name": "_interfaceId",
            "type": "bytes4"
          }
        ],
        "name": "supportsInterface",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "tokenURI",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "tokenId",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "devdoc": {
      "details": "Adheres to - IJB721Delegate: General interface for the methods in this contract that interact with the blockchain's state according to the protocol's rules. IJBFundingCycleDataSource: Allows this contract to be attached to a funding cycle to have its methods called during regular protocol operations. IJBPayDelegate: Allows this contract to receive callbacks when a project receives a payment. IJBRedemptionDelegate: Allows this contract to receive callbacks when a token holder redeems.Inherits from - ERC721: A standard definition for non-fungible tokens (NFTs).",
      "kind": "dev",
      "methods": {
        "approve(address,uint256)": {
          "details": "See {IERC721-approve}."
        },
        "balanceOf(address)": {
          "details": "Balance tracking to be overriden by childs"
        },
        "constructor": {
          "params": {
            "_directory": "The directory of terminals and controllers for projects.",
            "_name": "The name of the token.",
            "_projectId": "The ID of the project this contract's functionality applies to.",
            "_symbol": "The symbol that the token should be represented by."
          }
        },
        "didPay((address,uint256,uint256,(address,uint256,uint256,uint256),uint256,address,bool,string,bytes))": {
          "details": " This function will revert if the contract calling is not one of the project's terminals. ",
          "params": {
            "_data": "The Juicebox standard project payment data."
          }
        },
        "didRedeem((address,uint256,uint256,uint256,(address,uint256,uint256,uint256),address,string,bytes))": {
          "details": "This function will revert if the contract calling is not one of the project's terminals.",
          "params": {
            "_data": "The Juicebox standard project redemption data."
          }
        },
        "getApproved(uint256)": {
          "details": "See {IERC721-getApproved}."
        },
        "isApprovedForAll(address,address)": {
          "details": "See {IERC721-isApprovedForAll}."
        },
        "name()": {
          "details": "See {IERC721Metadata-name}."
        },
        "ownerOf(uint256)": {
          "details": "See {IERC721-ownerOf}."
        },
        "payParams((address,address,(address,uint256,uint256,uint256),uint256,uint256,address,uint256,uint256,string,bytes))": {
          "params": {
            "_data": "The Juicebox standard project payment data."
          },
          "returns": {
            "delegate": "A delegate to call once the payment has taken place.",
            "memo": "The memo that should be forwarded to the event.",
            "weight": "The weight that tokens should get minted in accordance with."
          }
        },
        "redeemParams((address,address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint256),bool,uint256,uint256,string,bytes))": {
          "params": {
            "_data": "The Juicebox standard project redemption data."
          },
          "returns": {
            "delegate": "A delegate to call once the redemption has taken place.",
            "memo": "The memo that should be forwarded to the event.",
            "reclaimAmount": "The amount that should be reclaimed from the treasury."
          }
        },
        "safeTransferFrom(address,address,uint256)": {
          "details": "See {IERC721-safeTransferFrom}."
        },
        "safeTransferFrom(address,address,uint256,bytes)": {
          "details": "See {IERC721-safeTransferFrom}."
        },
        "setApprovalForAll(address,bool)": {
          "details": "See {IERC721-setApprovalForAll}."
        },
        "supportsInterface(bytes4)": {
          "details": "See {IERC165-supportsInterface}.",
          "params": {
            "_interfaceId": "The ID of the interface to check for adherance to."
          }
        },
        "symbol()": {
          "details": "See {IERC721Metadata-symbol}."
        },
        "tokenURI(uint256)": {
          "details": "See {IERC721Metadata-tokenURI}."
        },
        "transferFrom(address,address,uint256)": {
          "details": "See {IERC721-transferFrom}."
        }
      },
      "title": " JB721Delegate",
      "version": 1
    },
    "userdoc": {
      "errors": {
        "PRBMath__MulDivOverflow(uint256,uint256)": [
          {
            "notice": "Emitted when the result overflows uint256."
          }
        ]
      },
      "kind": "user",
      "methods": {
        "didPay((address,uint256,uint256,(address,uint256,uint256,uint256),uint256,address,bool,string,bytes))": {
          "notice": " Part of IJBPayDelegate, this function gets called when the project receives a payment. It will mint an NFT to the contributor (_data.beneficiary) if conditions are met."
        },
        "didRedeem((address,uint256,uint256,uint256,(address,uint256,uint256,uint256),address,string,bytes))": {
          "notice": "Part of IJBRedeemDelegate, this function gets called when the token holder redeems. It will burn the specified NFTs to reclaim from the treasury to the _data.beneficiary."
        },
        "directory()": {
          "notice": "The directory of terminals and controllers for projects."
        },
        "payParams((address,address,(address,uint256,uint256,uint256),uint256,uint256,address,uint256,uint256,string,bytes))": {
          "notice": " Part of IJBFundingCycleDataSource, this function gets called when the project receives a payment. It will set itself as the delegate to get a callback from the terminal."
        },
        "projectId()": {
          "notice": "The ID of the project this contract's functionality applies to."
        },
        "redeemParams((address,address,uint256,uint256,uint256,uint256,uint256,(address,uint256,uint256,uint256),bool,uint256,uint256,string,bytes))": {
          "notice": " Part of IJBFundingCycleDataSource, this function gets called when a project's token holders redeem."
        },
        "supportsInterface(bytes4)": {
          "notice": "Indicates if this contract adheres to the specified interface."
        }
      },
      "notice": " Delegate that offers project contributors NFTs upon payment and the ability to redeem NFTs for treasury assets.",
      "version": 1
    }
  },
  "settings": {
    "compilationTarget": {
      "contracts/abstract/JB721Delegate.sol": "JB721Delegate"
    },
    "evmVersion": "berlin",
    "libraries": {},
    "metadata": {
      "bytecodeHash": "ipfs"
    },
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "remappings": [
      ":@jbx-protocol/=node_modules/@jbx-protocol/",
      ":@openzeppelin/=node_modules/@openzeppelin/",
      ":@paulrberg/=node_modules/@paulrberg/",
      ":ds-test/=lib/forge-std/lib/ds-test/src/",
      ":forge-std/=lib/forge-std/src/",
      ":prb-math/=node_modules/prb-math/"
    ]
  },
  "sources": {
    "contracts/abstract/ERC721.sol": {
      "keccak256": "0x34203459b830706fe252f39093665444b0fd46cd51acc683f779cd1300c2e650",
      "license": "MIT",
      "urls": [
        "bzz-raw://495a0e7d336f78ade8fd0ee7861c45e0a6b55b8f30992529d3783b571e83eabe",
        "dweb:/ipfs/QmXTZTor58btbJT7haQBzNL7aW5f2qLgxeswpRXjQ26Mmq"
      ]
    },
    "contracts/abstract/JB721Delegate.sol": {
      "keccak256": "0x73ab001c31c45d66aa05403683058750e2e2d73f5d75e8f9da52fde321c7bef3",
      "license": "MIT",
      "urls": [
        "bzz-raw://b755a6c7d05bf3eafe7ad759e8ecc95d6a43eb5e07e53a0fad3dce41d05dc0aa",
        "dweb:/ipfs/QmSkwARq5MFrJUouoxRCMzchr6i2aefXNRm79BhbA3es8Z"
      ]
    },
    "contracts/interfaces/IJB721Delegate.sol": {
      "keccak256": "0x4b12cda6a5bf76033185e3d8e071bdebb61986d831a7d64acb6db04a249aa6db",
      "license": "MIT",
      "urls": [
        "bzz-raw://31c222a2941eeb27627ebb951c3fcf2684227bcfa2bcd8d84300e96b0a2bd1c2",
        "dweb:/ipfs/QmVwtRJRbbzNXF9PsSPPyzQiKkJfiqStSYNANapvBKTeeX"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/enums/JBBallotState.sol": {
      "keccak256": "0xadf07fd49f7e0947006fa1921bc7fd8fb532e8fecf3b9266721a8b7e43907461",
      "license": "MIT",
      "urls": [
        "bzz-raw://7d4dd83fa3b7f679c9083eb172eb869a62dacf06eb5875dac7418fe3e5ceab1d",
        "dweb:/ipfs/QmTjNHiqPw6k8xKxExt4hL4xvM3NpFkab3CzbfyTMPXuRD"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBDirectory.sol": {
      "keccak256": "0x9e7f0d3590b3ddc3b667fcdacaa53b627e4d2b3a912360597fb0ffa413518167",
      "license": "MIT",
      "urls": [
        "bzz-raw://7465d2352978a69eba9c4af7a88c54bf14476a1e76d14807f8722343b266b7fb",
        "dweb:/ipfs/QmdsHrAVKtzESXe48953Z9MXurQkWa2rGnhKr2xzG5jtV4"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBFundingCycleBallot.sol": {
      "keccak256": "0xdc8c8bed613f5759c958b7b0d646032b4337a349a8ecea5ffeb167623f2f29f5",
      "license": "MIT",
      "urls": [
        "bzz-raw://e8d33d7214467f8d580781e24a87ffcfc98df6131dca0c0762ee4d2cedaba76d",
        "dweb:/ipfs/QmTkdtenb47dwcZ76iHThKoyN8gaBCAuW4PZDgNVL8W7Uo"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBFundingCycleDataSource.sol": {
      "keccak256": "0x8fe4fdc2cd71cd0b7202bddb7078f16c8eea746c8481ee9b3b06a0e01e8e7d6b",
      "license": "MIT",
      "urls": [
        "bzz-raw://f08117bf36e3b2ea9349c49d2ed8961bba73566d162e779a052d9fa0db2a3c9e",
        "dweb:/ipfs/Qme6w3qHHvmYYEo2v8ez9fNFWTThSuiFVJ2rLYwqNhhtc6"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBFundingCycleStore.sol": {
      "keccak256": "0xf75791cd5b71bc6773cf56c92501e3f255a406eaedea781cb57cea2fa1e4ef20",
      "license": "MIT",
      "urls": [
        "bzz-raw://697e21258b99ac2c4a2b73bcb8c8a47400737ecf5d3dfa6ca5a7b6f7d6be9c57",
        "dweb:/ipfs/Qmcdg3mEvgbtBnWhjZFubqH8sZU791jtXrWWpohKzN9tkG"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBPayDelegate.sol": {
      "keccak256": "0xf7a9ef2df665e1c85a461fadb3cd54f6270c181eac96064005bde19e54d0ffa9",
      "license": "MIT",
      "urls": [
        "bzz-raw://521eafc73d727317a65c8a0a27522de68a62988d005b632dac5cff96983ce892",
        "dweb:/ipfs/QmesPTKhG1T3X6H3QZx4JeYL17ebfahMoajPpAxrHLZdrr"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBPaymentTerminal.sol": {
      "keccak256": "0xf50279115f05568c12c254eb2c078b81a0c761f8cc985220e30ec15679118caa",
      "license": "MIT",
      "urls": [
        "bzz-raw://48d3576fd54ae9b9c27338cba0ad91aec18606c55d32a85aeddf1b599834a6cb",
        "dweb:/ipfs/QmUeqF8TRpzYC1MRNQXCWzVFvTQ7iBqfQQHpSQF7LbstFE"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBProjects.sol": {
      "keccak256": "0x602bad7e8cce6e9d53fe5e3532c5d4428d02206f8df48b246aac7ee8a6dcc98d",
      "license": "MIT",
      "urls": [
        "bzz-raw://e8b66a1813167e248944b75bcd0af559284e4a2482e9e9ade3c6e8b1fd59eb6e",
        "dweb:/ipfs/QmaNer7KD1EMensiJFABJ31ednVRnZcV3wfcx6FPFajoM9"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBRedemptionDelegate.sol": {
      "keccak256": "0xfc91761a568e60e1a1429ac11b0d1b57c627ef59f4011b17df4f9f540b7dd60d",
      "license": "MIT",
      "urls": [
        "bzz-raw://acf3264c04b881d7f59608c9f4e5c2e7333c2beb4c4f4468d6626c74aaa5e535",
        "dweb:/ipfs/QmPv6rH6gPHSpbRCGuMnZyGjV5iSkfbKjJsmD5Cxegn5CK"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/interfaces/IJBTokenUriResolver.sol": {
      "keccak256": "0xa64ece706d7ce399095f403b08383391c089da4995b5ee000b278d93d242a475",
      "license": "MIT",
      "urls": [
        "bzz-raw://900eeb480ed168ada8a738381bb1ea9c92a007e7000a1f2e5d7da02b3010a19b",
        "dweb:/ipfs/QmfKS6Mi6wGsT8gP3AETYKaXCiwFe9dzzFTEEkaFF7xoWg"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/libraries/JBConstants.sol": {
      "keccak256": "0x31517dfd8accf961f247cefd72bf8a76c20747cd8ed65cedf817dd7aa9a0082f",
      "license": "MIT",
      "urls": [
        "bzz-raw://29186e669b1130e1f35347a51fb40ced9b7d42d504f2133b608f4ea49aae211d",
        "dweb:/ipfs/QmduXpR7j1UroX94MCNA7zNBqAC3v18j2FMwki7T8rBEFv"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBDidPayData.sol": {
      "keccak256": "0x5466643df68a7bb1f88b781b7ac74379a1428d700edb1a22cd211c1fb8af458c",
      "license": "MIT",
      "urls": [
        "bzz-raw://ddd2e26dbf3d79cee9ef14bb9671a18471f6c5ee0e8252dda24d17e0919882d8",
        "dweb:/ipfs/QmYZknzBV5jzJXNJE4vAkxqBXfpi7WBS4XUqXPTGzEfftd"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBDidRedeemData.sol": {
      "keccak256": "0x52e35ebfda7cf16c90d920c63e450663c0d2b3395554b313e742d8fe74dc187f",
      "license": "MIT",
      "urls": [
        "bzz-raw://5fb8b3da0c5dab17d5263562de358af381aa6114363a97953ef5a02432f34fec",
        "dweb:/ipfs/QmSnnQwrGzXMvqjRsezL3rTgsvFpnm8QX9TjyCNY7cz3x3"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBFundingCycle.sol": {
      "keccak256": "0x7e1ee378705e677298b955bd82b7c79b962e1c2e20f840eb8c491aba595e4905",
      "license": "MIT",
      "urls": [
        "bzz-raw://4d2361ccc893ff87555ba225a5518e7c54d26faf5f51111d3fdd6b9bb9a2a608",
        "dweb:/ipfs/QmStFS5zKEbbbLZwBiNDBD7oqSKFzjZuYGReZrsnkzpuGR"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBFundingCycleData.sol": {
      "keccak256": "0xfc1c73d1b01782bbdfdd73d5d25f075e6c33dd37414638b63664063a0d1692cc",
      "license": "MIT",
      "urls": [
        "bzz-raw://751db5a5a4c7bb7b836a842688c8590c4557c660725df68e87c2935ed7fc995c",
        "dweb:/ipfs/QmPnwDBtcUhgs3L9gnEcdFXpJEdu8QcTMUFMQfLcwU53YZ"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBPayParamsData.sol": {
      "keccak256": "0x1e36a8a71ed2274fd31b0475e69943acc6a2091397a0d6c4fa99db05d9aaa0fd",
      "license": "MIT",
      "urls": [
        "bzz-raw://217ed226bf196ab19dd8e9fb340c1553b9f3a749ba450f9b6a36b42cb277e8a3",
        "dweb:/ipfs/Qmb89jN5p3wEVCRx2BaUizHyDZJcihPoPKCNF3Ww3TX9by"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBProjectMetadata.sol": {
      "keccak256": "0x5ea56d46d07944aacfe540ee9290f10a70d77b537650a0b28975e2e88fa5b9a4",
      "license": "MIT",
      "urls": [
        "bzz-raw://afdac58b0c0decc7576d5581757230f0d60c2415bb7a552e507e2833de7df9fa",
        "dweb:/ipfs/QmcsdVf8MHP5J13feRQzPvUZZGyohYmqeTWZuvvLsi2Czw"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBRedeemParamsData.sol": {
      "keccak256": "0xefe0290796bd282e478bdcfc1eb91c1bb02a3c910edd89b67db9c7d7f566c069",
      "license": "MIT",
      "urls": [
        "bzz-raw://dacda7ca85d6b4b832c40eae79e2362475d7111d397aaff3fb31c5811a9854a7",
        "dweb:/ipfs/QmQ2TymkG7wacEuGMCC2Ep2HWXRgAexhMt75YJbe9z19Mt"
      ]
    },
    "node_modules/@jbx-protocol/contracts-v2/contracts/structs/JBTokenAmount.sol": {
      "keccak256": "0xc606ed3c46a59e2e037897d2d749867919756d01f8e75a495d2dd4e03c3535fc",
      "license": "MIT",
      "urls": [
        "bzz-raw://4d68ccb6e9c7cf11f214d3812a0cc8de9918b601c62f39950172375d4be415f9",
        "dweb:/ipfs/QmRKhczPkxzVCKQ657EuLBftF5J2VVZKQknjWUa9sJ48rn"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
      "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
      "license": "MIT",
      "urls": [
        "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
        "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
      "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
      "license": "MIT",
      "urls": [
        "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
        "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
      ]
    },
    "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
      "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
      "license": "MIT",
      "urls": [
        "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
        "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Address.sol": {
      "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
      "license": "MIT",
      "urls": [
        "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
        "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Context.sol": {
      "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
      "license": "MIT",
      "urls": [
        "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
        "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
      "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
      "license": "MIT",
      "urls": [
        "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
        "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
      "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
      "license": "MIT",
      "urls": [
        "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
        "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
      ]
    },
    "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
      "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
      "license": "MIT",
      "urls": [
        "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
        "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
      ]
    },
    "node_modules/@paulrberg/contracts/math/PRBMath.sol": {
      "keccak256": "0x42821345981bc0434a90ba2268a2f5278dfe9e38166981d72fc7f3b776a29495",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://92f28eea1e22d4e7998617483eef42d89eb97b364414cf41041c86aa633d3b47",
        "dweb:/ipfs/QmT5entVZFjbb3ZGZZvNAGqtwerCgwjCfN1Qmvf8jKPBXj"
      ]
    },
    "node_modules/prb-math/contracts/PRBMath.sol": {
      "keccak256": "0xed164c95012964f5e125b5d2b2d00471a4bdee4def618cd1fcf341d196011b61",
      "license": "Unlicense",
      "urls": [
        "bzz-raw://3ba3ad78675323279adfc09038eaa14f4cde3f3173e5d2d60b9c30bf7099aa7b",
        "dweb:/ipfs/QmV56KGJZQG681hwd7JQDv3KjAa9JSGF88ShGx8YBCuvcR"
      ]
    }
  },
  "version": 1
}